{"version":3,"sources":["logo.svg","UnitDescription.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","UnitDescription","props","Card","CardContent","unit","NAME","HP","ATK","RANGE","DEF","MOV","cell","height","spacing","Main","infantryUnit","cavalryUnit","rangedUnit","initialMatrix","id","cells","_","clone","useState","matrix","setMatrix","startCellSelected","setStartCellSelected","startCell","setStartCell","targetCell","setTargetCell","classes","map","row","Grid","container","direction","justify","alignItems","item","xs","className","onClick","cellId","rowId","newMatrix","state","copy","selectCell","createMuiTheme","App","ThemeProvider","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9069476.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import _ from \"lodash\";\nimport { Card, CardContent, Grid, makeStyles } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nfunction UnitDescription(props) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Card>\n        <CardContent>\n          <b>{props.unit.NAME}</b>\n          <br />\n          HP:{props.unit.HP}\n          <br />\n          ATTACK:{props.unit.ATK}\n          <br />\n          RANGE:{props.unit.RANGE}\n          <br />\n          DEFENSE:{props.unit.DEF}\n          <br />\n          MOVEMENT:{props.unit.MOV}\n        </CardContent>\n      </Card>\n    </>\n  );\n}\n\nexport default UnitDescription;\n","import _ from \"lodash\";\nimport { Card, CardContent, Grid, makeStyles } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport UnitDescription from \"./UnitDescription\";\n\nconst useStyles = makeStyles((theme) => ({\n  cell: {\n    height: theme.spacing(10),\n  },\n}));\n\nfunction Main() {\n  let infantryUnit = {\n    NAME: \"INFANTRY\",\n    HP: 15,\n    ATK: 3,\n    RANGE: 1,\n    DEF: 2,\n    MOV: 1,\n  };\n\n  let cavalryUnit = {\n    NAME: \"CAVALRY\",\n    HP: 20,\n    ATK: 3,\n    RANGE: 1,\n    DEF: 1,\n    MOV: 2,\n  };\n\n  let rangedUnit = {\n    NAME: \"RANGED\",\n    HP: 10,\n    ATK: 3,\n    RANGE: 2,\n    DEF: 1,\n    MOV: 1,\n  };\n\n  let initialMatrix = [\n    {\n      id: 1,\n      cells: [\n        { id: 1, unit: _.clone(infantryUnit) },\n        { id: 2, unit: _.clone(rangedUnit) },\n        { id: 3, unit: _.clone(cavalryUnit) },\n      ],\n    },\n    { id: 2, cells: [{ id: 4 }, { id: 5 }, { id: 6 }] },\n    {\n      id: 3,\n      cells: [\n        { id: 7, unit: _.clone(infantryUnit) },\n        { id: 8, unit: _.clone(rangedUnit) },\n        { id: 9, unit: _.clone(cavalryUnit) },\n      ],\n    },\n  ];\n\n  const [matrix, setMatrix] = useState(initialMatrix);\n\n  const [startCellSelected, setStartCellSelected] = useState(null);\n  const [startCell, setStartCell] = useState(null);\n  const [targetCell, setTargetCell] = useState(null);\n  const selectCell = (cellId, rowId, cell) => {\n    let newMatrix = matrix;\n    newMatrix.map((row) => {\n      if (row.id === rowId) {\n        let cells = row.cells;\n        cells.map((cell) => {\n          if (cell.id === cellId) {\n            if (startCellSelected === true) {\n              // if (cell.state && cell.state === \"TARGETED\") {\n              //invalid case.\n              // cell.state = null;\n              // setStartCellSelected(null);\n              // } else {\n              if (startCell.unit) {\n                cell.state = `TARGETED by ${startCell.unit.NAME}`;\n                if (cell.unit) {\n                  cell.unit.HP =\n                    cell.unit.HP - (startCell.unit.ATK - cell.unit.DEF);\n                }\n              }\n\n              setTargetCell(cell);\n              setStartCellSelected(false);\n              // }\n            } else {\n              // if (cell.state && cell.state === \"STARTED\") {\n              //   cell.state = null;\n              //   setStartCellSelected(null);\n              // }\n              if (true) {\n                cell.state = \"STARTED\";\n                setStartCell(cell);\n                setStartCellSelected(true);\n              } else if (startCellSelected === false) {\n                cell.state = null;\n                setStartCellSelected(null);\n              }\n            }\n          } else {\n            cell.state = null;\n          }\n          return cell;\n        });\n        row.cells = cells;\n        return row;\n      }\n    });\n\n    let copy = [...newMatrix];\n    setMatrix(copy);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      Battlefield\n      {_.map(matrix, (row) => {\n        return (\n          <>\n            <Grid\n              id={row.id}\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              {_.map(row.cells, (cell) => {\n                return (\n                  <>\n                    <Grid item xs={4} key={cell.id}>\n                      <Card\n                        className={classes.cell}\n                        onClick={() => {\n                          selectCell(cell.id, row.id, cell);\n                        }}\n                      >\n                        <CardContent>\n                          {cell.unit?.NAME}\n                          {cell.unit?.NAME && <>---</>}\n                          {cell.state}\n                          <br />\n                          {cell.unit ? `HP ${cell.unit.HP}` : ``}\n                          {cell.unit?.HP === 0 ? \" XX DEAD\" : \"\"}\n                        </CardContent>\n                      </Card>\n                    </Grid>\n                  </>\n                );\n              })}\n            </Grid>\n          </>\n        );\n      })}\n      <br />\n      <br />\n      <br />\n      Start Cell - {startCell?.id} <br />\n      Target Cell - {targetCell?.id}\n      <br />\n      <br />\n      Units:\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs={4}>\n          <UnitDescription unit={infantryUnit} />\n        </Grid>\n        <Grid item xs={4}>\n          {\" \"}\n          <UnitDescription unit={rangedUnit} />\n        </Grid>\n        <Grid item xs={4}>\n          {\" \"}\n          <UnitDescription unit={cavalryUnit} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default Main;\n","import logo from './logo.svg';\nimport './App.css';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Main from \"./Main\";\nimport {Container} from \"@material-ui/core\";\nconst theme = createMuiTheme({\n\n});\nfunction App() {\n  return (\n      <ThemeProvider theme={theme}>\n          <Container maxWidth={\"lg\"}>\n              <Main/>\n          </Container>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}